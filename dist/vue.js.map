{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/gloabAPI.js","../src/compiler/parse.js","../src/compiler/index.js","../src/Observer/dep.js","../src/Observer/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/Observer/array.js","../src/Observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const strats = {};\r\n\r\n\r\n// 定义钩子\r\nconst LIFYCYCLE = [\r\n  'beforeCreate',\r\n  'created'\r\n]\r\n\r\n\r\n// 处理 mixin中的生命钩子和主页面的生命钩子  合并成数组，然后遍历执行钩子  即调用calHook(vm,hook)函数\r\n// p和c：假装是created函数\r\n// 1.首次进入 p是没有的 所有直接返回 [c], 首次必定有c 不然进入不了   {} =>  [created:fn]\r\n// 2.再次合并 如果 p(即上次返回的 [c] )有,而新的c无 直接返回 p   或者 是 p 有 c有则合并返回\r\nLIFYCYCLE.forEach(hook=>{\r\n  strats[hook] = (p,c)=>{\r\n    if(c){\r\n      if(p){\r\n        return p.concat(c)\r\n      }else{\r\n        return [c]\r\n      }\r\n    }else{\r\n      return p;\r\n    }\r\n  }\r\n})\r\n\r\n\r\n// 属性合并\r\nexport function mergeOptions(parent,child){\r\n  const options = {}\r\n\r\n  // console.log('parent',parent);\r\n  // console.log('child',child);\r\n  for (const key in parent) {\r\n    mergeField(key)\r\n  }\r\n\r\n  for (const key in child) {\r\n    if(!parent.hasOwnProperty(key)){\r\n      mergeField(key)\r\n    }\r\n  }\r\n\r\n  // 1.首次所有属性都放入 options 中\r\n  // 2.再次调用 mergeOptions 合并属性时，如果新传入的child中有，并且属性不在LIFYCYCLE中，直接新的属性直接覆盖\r\n  function mergeField(key){\r\n    // console.log('mergeField',key);\r\n    // 如果是LIFYCYCLE中定义的钩子 需要单独处理\r\n    if(strats[key]){\r\n      options[key] = strats[key](parent[key],child[key])\r\n    }else{\r\n      // 如果新的合并回合  父和子都有相同属性 用‘子’也就是（新的mixin中的属性替换旧的mixin中的属性）\r\n      options[key] = child[key] || parent[key];\r\n    }\r\n\r\n  }\r\n\r\n  // console.log('options',options);\r\n  return options;\r\n}\r\n\r\n","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue){\r\n  Vue.options = {};\r\n  Vue.mixin = function(mixin){\r\n    // console.log('mixin----------',mixin);\r\n    this.options = mergeOptions(this.options,mixin)\r\n  }\r\n}","const ncname = `[a-zA-z_][\\\\-\\\\.0-9_a-zA-z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; \r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //匹配标签名 <div\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //匹配结束标签名 </div>\r\n\r\n// 第一个分组就是属性的key value就是分组3/4/5\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; //匹配属性\r\nconst startTagClose = /^\\s*(\\/?)>/; //开始标签的结束 ' > '\r\n\r\n\r\n// 对模板进行编译处理（vue3采用的不是正则）或者使用插件 htmlparser2 解析\r\nexport function parseHTML(html){\r\n  const TEXT_TYPE = 3,  //文本类型\r\n        ELEMENT_TYPE = 1, //元素类型\r\n        stack = []; //存为元素\r\n  let currentParent; //指向栈中的最后一个\r\n  let root; //根节点\r\n\r\n\r\n  // 创建ast树\r\n  function createASTElement(tag,attrs){\r\n    return {\r\n      tag,\r\n      attrs,\r\n      children:[],\r\n      type:ELEMENT_TYPE,\r\n      parent:null\r\n    }\r\n  }\r\n\r\n  // 利用栈型结构，来构造一颗树 通过每次匹配判断标签开始与结束 判断进栈出栈 由此可以清晰知道当前节点所属位置\r\n  function start(tag,attrs){\r\n    let node = createASTElement(tag,attrs)\r\n\r\n    // 看下是否是空树 如果是当前树就是根节点\r\n    if(!root){\r\n      root = node;\r\n    }\r\n\r\n    // 如果当前节点的父节点存在，设置当前节点的父节点，以及给父节点添加儿子节点\r\n    if(currentParent){\r\n      node.parent = currentParent;\r\n      currentParent.children.push(node)\r\n    }\r\n\r\n    // 使用栈的进出判断当前节点以及其父节点\r\n    stack.push(node);\r\n    currentParent = node;\r\n  }\r\n\r\n  function chars(text){\r\n    // 去除所有空格  这里会把文本中的空格也给去除调\r\n    // text = text.replace(/\\s/g,'')\r\n    text = text.trim();\r\n    text && currentParent.children.push({\r\n      type:TEXT_TYPE,\r\n      text,\r\n      parent:currentParent\r\n    })\r\n  }\r\n\r\n  function end(tag){\r\n    stack.pop();\r\n    // 当前父节点，就是栈最后一个\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n\r\n  \r\n  // 去除匹配到了\r\n  function advance(n){\r\n    html = html.substring(n)\r\n  }\r\n\r\n  // 开始标签匹配处理\r\n  function parseStartTag(){\r\n    const start = html.match(startTagOpen);\r\n    //start: [0: \"<div\"  1: \"div\"]\r\n    if(start){\r\n      const match = {\r\n        tagName:start[1],\r\n        attrs:[]\r\n      }\r\n\r\n      // 匹配到之后 去除匹配开始标签\r\n      advance(start[0].length)\r\n\r\n      let attr,end;\r\n      // 当不是开始标签的结束时，而是属性则一直匹配 \r\n      while( !(end = html.match(startTagClose)) && (attr = html.match(attribute)) ){\r\n        // 将匹配得属性部分删除\r\n        advance(attr[0].length)\r\n\r\n        //通过正则匹配 1是属性名 2是‘：’ 3/4/5位是属性的值  true处理disabled这种属性\r\n        match.attrs.push({name:attr[1],value:attr[3] || attr[4] || attr[5] || true })\r\n      }\r\n\r\n      // 当匹配到开始标签得结束 > 时 删除 > \r\n      if(end){\r\n        advance(end[0].length)\r\n      }\r\n\r\n      return match;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  \r\n  // 通过正则匹配开始标签 结束标签 字符 进行分类处理\r\n  while(html){\r\n    // 为0代表是一个开始标签或者结束标签\r\n    let textEnd = html.indexOf('<');\r\n\r\n    // 开始标签或者结束标签\r\n    if(textEnd == 0){\r\n\r\n      // 当匹配到开始标签\r\n      const startTagMatch = parseStartTag();\r\n      if(startTagMatch){\r\n        // 处理开始标签为ast树\r\n        start(startTagMatch.tagName,startTagMatch.attrs)\r\n        continue;\r\n      }\r\n\r\n      // 如果是结束标签\r\n      const endTagMatch = html.match(endTag)\r\n      if(endTagMatch){\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n\r\n    // 如果是文本\r\n    if(textEnd > 0){\r\n      // 获取文本部分\r\n      const text = html.substring(0,textEnd)\r\n      // 删除文本部分\r\n      advance(text.length)\r\n      // 将文本处理成ast树\r\n      chars(text)\r\n    }\r\n  }\r\n\r\n  return root;\r\n}","import { parseHTML} from \"./parse\";\r\n\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;  //{{xx}} 匹配表达式的变量\r\n\r\n// 属性切割\r\nfunction genProps(attrs){\r\n  let str = '';\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n\r\n    // 如果是style属性单独切割处理\r\n    if(attr.name == 'style'){\r\n      let obj = {};\r\n      attr.value.split(';').map(item=>{\r\n        let [key,value] = item.split(':');\r\n        obj[key] = value;\r\n      })\r\n      attr.value = obj;\r\n    }\r\n\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0,-1)}}`;\r\n}\r\n\r\nfunction genChildren(children){\r\n  return children.map(child=>gen(child)).join(',')\r\n}\r\n\r\nfunction gen(node){\r\n  // 如果子节点是元素节点再次生成\r\n  if(node.type === 1){\r\n    return codegen(node)\r\n  }else{\r\n    // 如果是文本类型\r\n    let text = node.text;\r\n\r\n    // 如果没有匹配到 {{ }}  注意：/xxx/g.test() /xxx/g.exec(text))  匹配成功后的lastIndex 会变化\r\n    if(!defaultTagRE.test(text)){\r\n      return `_v(${JSON.stringify(text)})`\r\n    }else{\r\n      let tokens = [];\r\n      let match;\r\n      let lastIndex = 0;\r\n      // 这里一定得设置为0 否则只会匹配到最后一个值（是因为使用了g全局匹配会导致这种问题）\r\n      defaultTagRE.lastIndex = 0;\r\n\r\n      // match : [0: \"{{name}}\", 1: \"name\",groups: undefined,index: 0,input: \"{{name}} 今年 {{age}} 岁了， 喜欢打篮球\"]\r\n      while(match = defaultTagRE.exec(text)){\r\n        let index = match.index;  //当前匹配到的下标\r\n\r\n        // 如果匹配的 '文字 {{}} ' 前面还有 其他文本 直接放入\r\n        if(index > lastIndex){\r\n          tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n        }\r\n\r\n        // 重新设置当前匹配后的位置\r\n        lastIndex = index + match[0].length;\r\n\r\n        // console.log('match[1]',match[1],`${match[1]}`);\r\n        tokens.push(`_s(${match[1]})`);\r\n      }\r\n      //  匹配完成了 '{{}} 文字' 最后如果还有 文字也得放入进来\r\n      if(lastIndex < text.length){\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n// 将ast语法树转换成render函数  _c  _s替换{{}}  _v 文本\r\nfunction codegen(ast){\r\n  let children = genChildren(ast.children)\r\n  let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs):'null'}${ast.children.length>0 ? `,${children}`:''})`)\r\n  return code\r\n}\r\n\r\n//对模板进行编译处理\r\nexport function compileToFunction(template){\r\n  // 1. 将template转化成ast树\r\n  const ast = parseHTML(template)\r\n\r\n  // console.log('ast',ast);\r\n\r\n  // 2. 生成render方法 将ast语法树转换成render函数\r\n  // 模板引擎的实现原理 就是 with + new Function\r\n  let code = codegen(ast);\r\n  // console.log('code',this,code);\r\n\r\n  \r\n  // c('div',{id:\"app\",class:\"999\",style:{\"color\":\" #f33\",\"font-size\":\"18px\"}},_c('div',{style:{\"color\":\" #ff3\"}},_v(_s(name)+\" 你 \"+_s(age)+\"  好111\")),_c('span',null,_v(\"hello\")))\r\n  // 因为with 当this传入vm的时候，_s(xxx)中的变量会自动去vm上拿取\r\n  code = `with(this){return ${code}} `;\r\n  let render = new Function(code);\r\n  \r\n  return render;\r\n}","let id = 0;\r\nclass Dep{\r\n  constructor(){\r\n    // console.log('Dep--------',id);\r\n    this.id = id++;\r\n    this.subs = [];\r\n  }\r\n\r\n  depend(){\r\n    // （dep 和 watcher 是多对多的关系  一个属性在多个组件中使用  dep -> 多个watcher）\r\n    // 一个组件中有多个属性 watcher -> 多个dep\r\n\r\n    // this.subs.push(Dep.target)\r\n\r\n    // addDep是watcher的方法\r\n    Dep.target.addDep(this)\r\n  }\r\n\r\n  addSub(watcher){\r\n    this.subs.push(watcher)\r\n  }\r\n\r\n  // watcher 更新\r\n  notify(){\r\n    this.subs.forEach(watcher=>watcher.update())\r\n  }\r\n}\r\n\r\nDep.target = null;\r\n\r\n// 创建栈用于存储多个wathcer\r\nlet stack = [];\r\nexport function pushTarget(watcher){\r\n  Dep.target = watcher;\r\n  stack.push(watcher)\r\n}\r\n\r\nexport function popTarget(){\r\n  stack.pop()\r\n  Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nexport default Dep;","// 即使用观察者模式\r\n// 1.我们可以给模板中的属性 增加一个收集器 dep\r\n// 2.页面渲染的时候，我们将渲染逻辑封装在watcher中  vm._update(vm._render())\r\n// 3.让dep记住这个watcher即可，稍后属性变化了可以找到对应的dep中存放的watcher进行重新渲染\r\n\r\nimport Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\n//1) 当我们创建渲染watcher的时候我们会把当前的渲染watcher放到Dep.target上\r\n//2) 当调用_render() 会进行取值操作 走到get上\r\n\r\nlet id = 0;\r\nclass Watcher{\r\n  constructor(vm,fn,options){\r\n    this.id = id++;\r\n    this.vm = vm;\r\n    this.renderWatcher = options;  //true 表示是一个渲染watcher\r\n    this.getter = fn; //\r\n    this.deps = [];\r\n    this.depId = new Set();\r\n    this.lazy = options.lazy;  //不明白为什么不直接\r\n    this.dirty = this.lazy;  //缓存值\r\n\r\n    this.lazy?undefined : this.get();\r\n  }\r\n\r\n  // 一个组件对应多个属性 重复属性不用记录\r\n  addDep(dep){\r\n    if(!this.depId.has(dep.id)){\r\n      this.deps.push(dep)\r\n      this.depId.add(dep.id)\r\n      dep.addSub(this)\r\n    }\r\n  }\r\n\r\n  // 计算属性通过计算watcher获取对应的值\r\n  evaluate(){\r\n    this.value = this.get()\r\n    this.dirty = false; //计算属性计算一次后  缓存计算值\r\n  }\r\n\r\n  // 让当前的计算属性去记住 渲染watcher \r\n  depend(){\r\n    let i = this.deps.length;\r\n    while(i--){\r\n      this.deps[i].depend();\r\n    }\r\n    // console.log('this.deps',this.deps);\r\n  }\r\n\r\n  // 计算属性的 getter只是获取值 并不是更新视图的函数\r\n  get(){\r\n    // console.log('-----this',this);\r\n    pushTarget(this)\r\n    let value = this.getter.call(this.vm);\r\n    popTarget();\r\n    return value;\r\n  }\r\n\r\n  // 设置新值的时候才会走\r\n  update(){\r\n    // 1.当计算属性的 某个值（记住了计算watcher 和 渲染watcher）更改时 会执行dep.notify 对队列中的watcher执行update方法 \r\n    // 2.首先调用计算watcher 设置dirty为真，使计算属性走evaluate方法 更新计算属性值\r\n    // 3.再调用渲染watcher更新视图\r\n    if(this.lazy){\r\n      this.dirty = true;\r\n    }else{\r\n      queueWatcher(this)\r\n    }\r\n    \r\n  }\r\n\r\n  run(){\r\n    console.log('----------run------------');\r\n    this.get();\r\n  }\r\n}\r\n\r\n// （每个属性都有一个dep  watcher相当一个视图）\r\n// 一个组件中 有多个属性（n个属性形成一个视图） n个dep对应一个watcher\r\n// 一个属性对应着多个组件 1个dep对应着多个watcher \r\n// dep 和 watcher 多对多的关系\r\n\r\n\r\n// 使用队列 防止属性多次修改 多次执行更新\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false;\r\n\r\nfunction flashSchedulerQueue(){\r\n  let flashQueue = queue.slice(0);\r\n  queue = [];\r\n  has = {};\r\n  pending = false;\r\n  flashQueue.forEach(q=>q.run())\r\n}\r\n\r\nfunction queueWatcher(watcher){\r\n  let id = watcher.id;\r\n  if(!has[id]){\r\n    has[id] = true;\r\n    queue.push(watcher);\r\n    \r\n    // 多次修改属性的值  只会执行一次（使用了宏任务setTimeout）\r\n    // 不论update执行多少次 但是最终只执行一轮刷新操作\r\n    if(!pending){\r\n      nextTick(flashSchedulerQueue,0)\r\n      pending =true;\r\n    }\r\n  }\r\n}\r\n\r\nlet callbacks = [];\r\nlet waiting = false;\r\nlet timerFunc;\r\n\r\n// 按照队列顺序执行回调\r\nfunction flashCallback(){\r\n  let cbs = callbacks.slice(0);\r\n  // console.log('cbs--------',cbs);\r\n  callbacks =[];\r\n  waiting = false;\r\n  cbs.forEach(cb=>cb())\r\n}\r\n\r\n// nextTick 不是维护了一个异步任务   而是将这个任务维护到了队列中\r\nexport function nextTick(cb){\r\n  callbacks.push(cb);\r\n  // console.log('cb',callbacks,cb);\r\n  if(!waiting){\r\n    // setTimeout(()=>{\r\n    //   // 最后一起刷新\r\n    //   flashCallback();\r\n    // },0)\r\n    timerFunc();\r\n    waiting= true\r\n  }\r\n} \r\n\r\n// vue中的 nextTick没有直接采用某个api 而是采用优雅降级的方式\r\n// 内部首先采用promise(ie 不兼容) MutationObserver(h5 的api)  ie专项 setImmediate\r\n\r\n\r\nif(Promise){\r\n  timerFunc = ()=>{\r\n    Promise.resolve().then(flashCallback)\r\n  }\r\n}else if(MutationObserver){\r\n  let observer = new MutationObserver(flashCallback)\r\n  let textNode = document.createTextNode(1);\r\n  observer.observe(textNode,{\r\n    characterData:true //节点内容或节点文本的变动。\r\n  })\r\n\r\n  timerFunc = ()=>{\r\n    textNode.textContent = 2;\r\n  }\r\n}else if(setImmediate){\r\n  timerFunc = ()=>{\r\n    setImmediate(flashCallback)\r\n  }\r\n}else{\r\n  timerFunc = ()=>{\r\n    setTimeout(flashCallback)\r\n  }\r\n}\r\n\r\nexport default Watcher;","//  _h() _c()\r\nexport function createElementVNode(vm,tag,data,...children){\r\n  // console.log('66666666',tag,data,children);\r\n  if(data == null){\r\n    data = {};\r\n  }\r\n\r\n  // 不明白这里为什么要把key删除\r\n  // let key = data.key;\r\n  // if(key){\r\n  //   delete data.key\r\n  // }\r\n\r\n  return vnode(vm,tag,data.key,data,children)\r\n}\r\n\r\n\r\n// _v()\r\nexport function createTextVNode(vm,text){\r\n  return vnode(vm,undefined,undefined,undefined,undefined,text)\r\n}\r\n\r\n\r\nfunction vnode(vm,tag,key,data,children,text){\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text\r\n  }\r\n}","/**\r\n * vue核心流程\r\n * 1. 创造了响应式数据\r\n * 2. 模板转换成ast语法树\r\n * 3. 将ast语法树转换成render函数\r\n * 4. 后续每次数据更新可以只执行render函数（无需再次执行ast转化过程）\r\n */\r\n\r\nimport Watcher from \"./Observer/watcher\";\r\nimport { createElementVNode,createTextVNode} from \"./vdom/index\";\r\n\r\n\r\n// 创建真实DOM元素\r\nfunction createElm(vnode){\r\n  let {tag,data,text,children} = vnode;\r\n\r\n  if(typeof tag === 'string'){\r\n    vnode.el = document.createElement(tag)\r\n    patchProps(vnode.el,data)\r\n    children.forEach(child => {\r\n      vnode.el.appendChild(createElm(child)) \r\n    });\r\n  }else{\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n\r\n  return vnode.el;\r\n}\r\n\r\n\r\n// 更新属性\r\nfunction patchProps(el,props){\r\n  for (const key in props) {\r\n    if (key === 'style') {\r\n      for (const styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName];\r\n      }\r\n    }else{\r\n      el.setAttribute(key,props[key])\r\n    }\r\n  }\r\n}\r\n\r\n// 创建真实DOM节点\r\nfunction patch(oldVNode,vnode){\r\n  // 看是否是真实的元素节点\r\n  let isRealElement = oldVNode.nodeType;\r\n  // console.log('isRealElement',oldVNode,vnode,isRealElement);\r\n  if(isRealElement){\r\n    const elm = oldVNode;\r\n\r\n    const parentElm = elm.parentNode;  //拿到父元素\r\n\r\n    // 将虚拟DOM转为真实DOM\r\n    const newElm = createElm(vnode);\r\n\r\n    parentElm.insertBefore(newElm,elm.nextSibling) //插入新节点\r\n\r\n    parentElm.removeChild(elm); //删除老节点\r\n    \r\n    // 将新的节点返回，重新赋值 $el 用于下次更新\r\n    return newElm;\r\n  }else{\r\n\r\n  }\r\n}\r\n\r\nexport function initLifeCycle(Vue){\r\n  Vue.prototype._update = function(vnode){\r\n    const vm = this;\r\n    let el = vm.$el;\r\n\r\n    // 这里patch既有初始化方法  又有更新（vm.$el重新赋值新的节点） \r\n    vm.$el = patch(el,vnode);\r\n  }\r\n\r\n  Vue.prototype._render = function(){\r\n    // console.log('this.$options.render',this.$options.render);\r\n    // 指向Vue 因为render函数使用with 当this传入vm的时候，_s(xxx)中的变量会自动去vm上拿取\r\n    return this.$options.render.call(this);\r\n  }\r\n\r\n  Vue.prototype._c = function(){\r\n    // console.log('1',arguments);\r\n    return createElementVNode(this,...arguments)\r\n  }\r\n  Vue.prototype._v = function(){\r\n    // console.log('2',arguments);\r\n    return createTextVNode(this,...arguments);\r\n  }\r\n\r\n  // 因为render函数使用with的原因 所以_s(xxx)中的变量 可以直接获取对应的值\r\n  Vue.prototype._s = function(value){\r\n    // console.log('3',value);\r\n    if( typeof value !== 'object') return value;\r\n    return JSON.stringify(value);\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm,el){\r\n  vm.$el = el;\r\n\r\n  // 1.调用render方法产生虚拟节点，虚拟DOM\r\n  // console.log('vm----------',vm,vm._render());\r\n\r\n  console.log('-----------mountComponent-----------');\r\n  const updateComponents = ()=>{\r\n    vm._update(vm._render()); // 更新组件渲染\r\n  }\r\n\r\n  // debugger\r\n  // watcher 相当于一个观察者  dep则是收集者 \r\n  let watcher = new Watcher(vm,updateComponents,true) //true 用于标识 是一个渲染watcher\r\n\r\n  console.log('watcher',watcher);\r\n  // 2.根据虚拟DOM产生真实DOM\r\n\r\n  // 3.插入到el元素中\r\n}\r\n\r\n// 生命周期钩子遍历执行\r\nexport function calHook(vm,hook){\r\n  // console.log('hook',hook);\r\n  // 如果钩子函数的数组存在\r\n  const handles = vm.$options[hook];\r\n  \r\n  handles && handles.forEach(handle=>handle())\r\n}","\r\nlet oldArrayProto = Array.prototype;  //获取数组原型\r\n\r\n// 获取新的实例原型  不影响原数组方法\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n// 找到所有变异方法\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice',\r\n]\r\n\r\nmethods.forEach(method=>{\r\n  // 数组方法的重新\r\n  newArrayProto[method] = function(...args){\r\n\r\n    // console.log('------this-----',this,args);\r\n    \r\n    // 内部还是调用了原来的方法\r\n    const result = oldArrayProto[method].call(this,...args);\r\n\r\n    // 我们对新增的数据进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n\r\n    switch(method){\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args;\r\n        break;\r\n      case 'splice':  //arr.splice(0,1,{age:18},{a:1})\r\n        inserted = args.slice(2)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if(inserted){\r\n      // 对新增的内容再次进行观测\r\n      ob.observeArray(inserted);\r\n    }\r\n\r\n    // 数组更新\r\n    ob.dep.notify();\r\n    return result;\r\n  }\r\n})\r\n\r\n","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observer{\r\n  constructor(data){\r\n    \r\n    // 为了让每个对象都有一个依赖收集\r\n    this.dep = new Dep();\r\n    // 为了数组能够使用 observeArray 去观测新增的数据\r\n    Object.defineProperty(data,'__ob__',{\r\n      value:this,\r\n      enumerable:false\r\n    })\r\n\r\n    console.log('-------',data);\r\n    // 如果是数组就不再一个个劫持  太浪费性能了 (数组劫持的核心，就是重写数组的方法，对新增的属性进行判断和观测)\r\n    if(Array.isArray(data)){\r\n      // 对数组7个变异方法进行重写\r\n      data.__proto__ = newArrayProto;\r\n\r\n      // 如果数组中放的是对象，可以检测其变化\r\n      this.observeArray(data)\r\n    }else{\r\n      // Object.defineProperty 只能劫持已经存在的属性（vue里面会为此单独写一些api $set $delete）\r\n      this.walk(data);\r\n    }\r\n  }\r\n\r\n  // 循环对象依次进行劫持\r\n  walk(data){\r\n    // “重新定义” 属性 因此vue2性能会有点差\r\n    Object.keys(data).forEach(key=>{defineReactive(data,key,data[key])})\r\n  }\r\n\r\n  // 观测数组 对数组中的对象进行劫持\r\n  observeArray(data){\r\n    data.forEach(item=>{observe(item)})\r\n  }\r\n}\r\n\r\n// 如果数组中还有数组或者对象 接着进行依赖收集\r\nfunction dependArray(value){\r\n  for(let i; i <value.length; i++){\r\n    let current = value[i];\r\n    current.__ob__ && current.__ob__.dep.depend()\r\n    if(Array.isArray(current)){\r\n      dependArray(current)\r\n    }\r\n  }\r\n  // console.log('dependArray',value);\r\n}\r\n\r\n// 数据劫持  闭包 属性劫持\r\nexport function defineReactive(target,key,value){\r\n  // 如果值是对象再次进行劫持\r\n  let childDep =  observe(value)\r\n\r\n  let dep = new Dep();\r\n  // console.log('-------dep-----------',dep.id,key,value);\r\n  Object.defineProperty(target,key,{\r\n    get(){\r\n      // 让这个属性的收集器记住当前的watcher  \r\n      // console.log('Dep.target',Dep.target);\r\n      if(Dep.target){  //注意这里只是 首次的data函数中的属性 进行的依赖收集 \r\n        dep.depend();\r\n\r\n        // 这里是让 里面的数组和对象也进行依赖收集 为了修改时候调用更新操作\r\n        if(childDep){\r\n          childDep.dep.depend();\r\n          \r\n          // 如果里面还嵌套数组 也进行依赖收集\r\n          if(Array.isArray(value)){\r\n            dependArray(value)\r\n          }\r\n        }\r\n      }\r\n      console.log('获取',key);\r\n      return value;\r\n    },\r\n    set(newVal){\r\n      console.log('设置');\r\n      if(newVal === value)return;\r\n\r\n      observe(newVal)// 用户给新值重新赋值对象，需要再次代理\r\n      \r\n      value = newVal\r\n\r\n      // 重新渲染页面\r\n      dep.notify()\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data){\r\n  // 只对对象进行劫持\r\n  if(typeof data != 'object' || data == null)return;\r\n\r\n  // 说明对象已经被代理过了\r\n  if(data.__ob__ instanceof Observer){\r\n    return data.__ob__;\r\n  }\r\n\r\n  // 若果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持过，可以添加一个实例，用实例来判断是否被劫持过）\r\n  return new Observer(data)\r\n}","import Dep from \"./Observer/dep.js\";\r\nimport { observe } from \"./Observer/index.js\";\r\nimport Watcher from './Observer/watcher.js'\r\n\r\nexport function initState(vm){\r\n  const opts = vm.$options;\r\n\r\n  if(opts.data){\r\n    initData(vm)\r\n  }\r\n\r\n  if(opts.computed){\r\n    initComputed(vm)\r\n  }\r\n\r\n}\r\n\r\n// 数据初始化\r\nfunction initData(vm){\r\n  let data = vm.$options.data; //data可能是函数和对象 vue3认定是函数\r\n\r\n  // 疑问这里data函数的指向就是vm 为什么要call\r\n  data = typeof data =='function'?data.call(vm):data;\r\n \r\n  vm._data = data;  //将返回的对象放到_data上\r\n\r\n  // 对于数据进行劫持 vue2里采用了一个api defineProperty\r\n  observe(data)\r\n\r\n  // 将vm._data 用vm来代理  方便用户获取\r\n  for(let key in data){\r\n    proxy(vm,'_data',key)\r\n  }\r\n}\r\n\r\n// vm.xxx  代理到 vm._data.xxx\r\nfunction proxy(vm,target,key){\r\n  Object.defineProperty(vm,key,{\r\n    get(){\r\n      return vm[target][key]\r\n    },\r\n\r\n    set(value){\r\n      vm[target][key] = value;\r\n    }\r\n  })\r\n}\r\n\r\n// 初始化 computed函数\r\nfunction initComputed(vm){\r\n  const computed = vm.$options.computed;\r\n  let watchers = vm._computedWathcers  ={};\r\n  // debugger\r\n  for (const key in computed) {\r\n    const userDef = computed[key];\r\n\r\n    let fn = typeof userDef == 'function'?userDef:userDef.get;\r\n\r\n    // 每个计算属性 对应一个计算watcher  默认lazy 首次不触发 视图更新操作\r\n    // 此刻的计算watcher的get方法 就是当前计算属性的get方法\r\n    watchers[key] = new Watcher(vm,fn,{lazy:true})\r\n    // console.log('watchers[key]',watchers[key]);\r\n    defineComputed(vm,key,userDef);\r\n  }\r\n}\r\n\r\n// 定义计算属性\r\nfunction defineComputed(target,key,userDef){\r\n  const setter = userDef.set || (()=>{})\r\n  Object.defineProperty(target,key,{\r\n    get:createComputedGetter(key),\r\n    set:setter\r\n  })\r\n}\r\n\r\n// 创建一个计算属性控制器 用于控制页面多次调用计算属性只执行一次\r\n// 计算属性根本不会去收集依赖，只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key){\r\n  return function(){\r\n    let watcher = this._computedWathcers[key]; //获取到对应计算属性的watcher\r\n\r\n    // console.log('createComputedGetter',watcher.dirty);\r\n    if(watcher.dirty){\r\n      // 如果用户传入的数据是脏的就去执行传入的函数\r\n      watcher.evaluate();\r\n    }\r\n\r\n    // 这里的是渲染watcher了 让计算属性记住渲染watcher 用于当值变化地时候 即调用计算watcher更新值，也调用渲染watcher更新视图\r\n    if(Dep.target){\r\n      watcher.depend();\r\n    }\r\n\r\n    return watcher.value;\r\n  }\r\n}","import { compileToFunction } from \"./compiler/index\";\r\nimport { calHook, mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions } from \"./utils\";\r\n\r\nexport function initMinx(Vue){\r\n  // 初始化\r\n  Vue.prototype._init = function(options){\r\n    const vm = this;\r\n    \r\n    // this.constructor.options  是gloabAPI.js 中 定义的\r\n    vm.$options = mergeOptions(this.constructor.options,options)\r\n    // vm.$options = options;// 将选项挂载到实例上  data,create,methods...\r\n\r\n    calHook(vm,'beforeCreate')\r\n    // 状态初始化\r\n    console.log('---------------initState--------------');\r\n    initState(vm)\r\n\r\n    calHook(vm,'created')\r\n    // 模板初始化\r\n    if(options.el){\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function(el){\r\n    const vm = this;\r\n    let ops = vm.$options;\r\n    el = document.querySelector(el);\r\n\r\n    // 先看有没有render函数\r\n    if(!ops.render){\r\n      let template;\r\n\r\n      if(!ops.template && el){\r\n        template = el.outerHTML;\r\n      }else{\r\n        template = ops.template;\r\n      }\r\n      \r\n      // 去生成render函数\r\n      if(template){\r\n        // 对模板进行编译\r\n        const render = compileToFunction(template)\r\n        ops.render = render;\r\n      }\r\n    }\r\n\r\n    // 组件挂载\r\n    mountComponent(vm,el)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n ","import { initGlobalAPI } from \"./gloabAPI\";\r\nimport { initMinx } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { nextTick } from \"./Observer/watcher\";\r\n\r\n// 不使用class 去创建类 是为了避免所有的方法耦合在一起\r\nfunction Vue(options){\r\n  // 初始化\r\n  this._init(options)\r\n}\r\n\r\nVue.prototype.$nextTick = nextTick;\r\n\r\n// 扩展了init 方法\r\ninitMinx(Vue);\r\n// \r\ninitLifeCycle(Vue)\r\n\r\ninitGlobalAPI(Vue)\r\n\r\nexport default Vue;"],"names":["strats","LIFYCYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","TEXT_TYPE","ELEMENT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","children","type","start","node","push","chars","text","trim","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","obj","split","map","item","JSON","stringify","slice","genChildren","gen","join","codegen","test","tokens","lastIndex","exec","index","ast","code","compileToFunction","template","render","Function","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","fn","renderWatcher","getter","deps","depId","Set","lazy","dirty","undefined","get","dep","has","add","addSub","depend","call","queueWatcher","console","log","queue","pending","flashSchedulerQueue","flashQueue","q","run","nextTick","callbacks","waiting","timerFunc","flashCallback","cbs","cb","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","vnode","createTextVNode","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","prototype","_update","$el","_render","$options","_c","arguments","_v","_s","mountComponent","updateComponents","calHook","handles","handle","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","dependArray","current","childDep","set","newVal","initState","opts","initData","computed","initComputed","_data","proxy","watchers","_computedWathcers","userDef","defineComputed","setter","createComputedGetter","evaluate","initMinx","_init","constructor","$mount","ops","querySelector","outerHTML","$nextTick"],"mappings":"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"}